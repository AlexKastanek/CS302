#include "BinaryNode.h"

BinaryNode::BinaryNode()
{

	data = 0;
	leftChildPtr = nullptr;
	rightChildPtr = nullptr;

}

BinaryNode::BinaryNode(int dataSource)
{

	data = dataSource;
	leftChildPtr = nullptr;
	rightChildPtr = nullptr;

}

BinaryNode::BinaryNode(int dataSource, BinaryNode* leftSource, BinaryNode* rightSource)
{

	data = dataSource;
	this->leftChildPtr = leftSource;
	this->rightChildPtr = rightSource;

}

void BinaryNode::setItem(int source)
{

	data = source;

}

int BinaryNode::getItem() const
{

	return data;

}

bool BinaryNode::isLeaf() const
{

	return (rightChildPtr == nullptr && leftChildPtr == nullptr);

}

BinaryNode* BinaryNode::getLeftChildPtr() const
{

	return this->leftChildPtr;

}

BinaryNode* BinaryNode::getRightChildPtr() const
{

	return this->rightChildPtr;

}

void BinaryNode::setLeftChildPtr(BinaryNode* source)
{

	this->leftChildPtr = source;

}

void BinaryNode::setRightChildPtr(BinaryNode* source)
{

	this->rightChildPtr = source;

}





















